# -*- coding: utf-8 -*-
"""00_exploring_praw.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zbJGw53MBQm5ncI-LxVDR_t7SkDavV_j
"""

!pip install praw
import praw
import pandas as pd
import datetime as dt
#below is the account info
# set up reddit instance
reddit = praw.Reddit(client_id='XXXXXXXX',
                     client_secret="XXXXXXXXX",
                     username='XXXXXXXXX',
                     password='XXXXXXXXX',
                     user_agent='XXXXXXXXX')

subreddit = reddit.subreddit('MensRights')

def get_date(submission):
  time = submission.created
  return dt.datetime.fromtimestamp(time)

"""Exploring 'hot posts'"""

hot = subreddit.hot(limit=10) #limit means the top x Number of hottest posts in teh subreddit, in this case 10

# getting all submission titles
#for submission in hot:
#  print(submission.title)

# getting submission titles that are not 'stickied'
for submission in hot:
  if not submission.stickied: # this filters out "stickies "
    print(submission.title)

hot = subreddit.hot(limit=10)

for submission in hot:
  if not submission.stickied:
    print(submission.url)

hot = subreddit.hot(limit=10)

# to get more information (ups, downs, whether we have visited it before)
for submission in hot:
  if not submission.stickied:
    print('Title: {}, ups: {}, downs: {}, URL: {}'.format(submission.title,
                                                          submission.ups,
                                                          submission.downs,
                                                          submission.url))
    coments = submission.comments.replace_more(limit=0)  # this is to fix the issue posed by lists of comment of reddit being cut off after a certain point where there is then a "load more" button like FB replace more lets us see them
    for comment in submission.comments.list():
      print (20*'-')
      print ('Parent ID:', comment.parent())
      print ('Comment ID:', comment.id)

      print(comment.body)
      if len(comment.replies) > 0:
        for reply in comment.replies:
          print('REPLY:',reply.body)

#dir(reply)

#TOP
top_subreddit = subreddit.top()

for submission in subreddit.top(limit=1):
    print(submission.title, submission.id)

topics_dict = { "title":[],
                "ups":[],
                "downs":[],
                "score":[],
                "id":[],
                "url":[],
                "comms_num": [],
                "created": [],
                "body": [],
                "date": []}

for submission in top_subreddit:
    topics_dict["title"].append(submission.title)
    topics_dict["ups"].append(submission.ups)
    topics_dict["downs"].append(submission.downs)
    topics_dict["score"].append(submission.score)
    topics_dict["id"].append(submission.id)
    topics_dict["url"].append(submission.url)
    topics_dict["comms_num"].append(submission.num_comments)
    topics_dict["created"].append(submission.created)
    topics_dict["body"].append(submission.selftext)
    topics_dict["date"].append(get_date(submission))

top_df = pd.DataFrame(topics_dict)
top_df

#HOT

hot_subreddit = subreddit.hot()

for submission in subreddit.hot(limit=1):
    print(submission.title, submission.id)

topics_dict = { "title":[],
                "ups":[],
                "downs":[],
                "score":[],
                "id":[],
                "url":[],
                "comms_num": [],
                "created": [],
                "body": [],
                "date": []}

for submission in hot_subreddit:
    topics_dict["title"].append(submission.title)
    topics_dict["ups"].append(submission.ups)
    topics_dict["downs"].append(submission.downs)
    topics_dict["score"].append(submission.score)
    topics_dict["id"].append(submission.id)
    topics_dict["url"].append(submission.url)
    topics_dict["comms_num"].append(submission.num_comments)
    topics_dict["created"].append(submission.created)
    topics_dict["body"].append(submission.selftext)
    topics_dict["date"].append(get_date(submission))

hot_df = pd.DataFrame(topics_dict)
hot_df

# NEW

new_subreddit = subreddit.new()

for submission in subreddit.new(limit=1):
    print(submission.title, submission.id)

topics_dict = { "title":[],
                "ups":[],
                "downs":[],
                "score":[],
                "id":[],
                "url":[],
                "comms_num": [],
                "created": [],
                "body": [],
                "date": []}

for submission in new_subreddit:
    topics_dict["title"].append(submission.title)
    topics_dict["ups"].append(submission.ups)
    topics_dict["downs"].append(submission.downs)
    topics_dict["score"].append(submission.score)
    topics_dict["id"].append(submission.id)
    topics_dict["url"].append(submission.url)
    topics_dict["comms_num"].append(submission.num_comments)
    topics_dict["created"].append(submission.created)
    topics_dict["body"].append(submission.selftext)
    topics_dict["date"].append(get_date(submission))

new_df = pd.DataFrame(topics_dict)
new_df

#Controversial

controversial_subreddit = subreddit.controversial()

for submission in subreddit.controversial(limit=1):
    print(submission.title, submission.id)

topics_dict = { "title":[],
                "ups":[],
                "downs":[],
                "score":[],
                "id":[],
                "url":[],
                "comms_num": [],
                "created": [],
                "body": [],
                "date": []}

for submission in controversial_subreddit:
    topics_dict["title"].append(submission.title)
    topics_dict["ups"].append(submission.ups)
    topics_dict["downs"].append(submission.downs)
    topics_dict["score"].append(submission.score)
    topics_dict["id"].append(submission.id)
    topics_dict["url"].append(submission.url)
    topics_dict["comms_num"].append(submission.num_comments)
    topics_dict["created"].append(submission.created)
    topics_dict["body"].append(submission.selftext)
    topics_dict["date"].append(get_date(submission))

con_df = pd.DataFrame(topics_dict)
con_df

#Rising
rising_subreddit = subreddit.rising()

for submission in subreddit.rising(limit=1):
    print(submission.title, submission.id)

topics_dict = { "title":[],
                "ups":[],
                "downs":[],
                "score":[],
                "id":[],
                "url":[],
                "comms_num": [],
                "created": [],
                "body": [],
                "date": []}

for submission in rising_subreddit:
    topics_dict["title"].append(submission.title)
    topics_dict["ups"].append(submission.ups)
    topics_dict["downs"].append(submission.downs)
    topics_dict["score"].append(submission.score)
    topics_dict["id"].append(submission.id)
    topics_dict["url"].append(submission.url)
    topics_dict["comms_num"].append(submission.num_comments)
    topics_dict["created"].append(submission.created)
    topics_dict["body"].append(submission.selftext)
    topics_dict["date"].append(get_date(submission))

rising_df = pd.DataFrame(topics_dict)
rising_df

# import files
from google.colab import files

# save to csv and download [RENAME FOR EACH NEW SUBREDDIT]
top_df.to_csv("03_top.csv")
hot_df.to_csv("03_hot.csv")
new_df.to_csv("03_new.csv")
con_df.to_csv("03_controversial.csv")
rising_df.to_csv("03_rising.csv")

# download to corresponding GDrive desktop folder
files.download("03_top.csv")
files.download("03_hot.csv")
files.download("03_new.csv")
files.download("03_controversial.csv")
files.download("03_rising.csv")
